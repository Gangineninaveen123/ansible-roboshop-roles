

- name: nodejs from common tasks in roles folder # calling nodejs file in [common\tasks] to [catalogue\tasks]
  include_role:
    name: common
    tasks_from: nodejs


# To have mongo client installed we have to setup MongoDB repo and install mongodb-client.
- name: copying mongo.repo file
  ansible.builtin.copy:
    src: mongo.repo
    dest: /etc/yum.repos.d/mongo.repo

# installing mongo db client
- name: install mongodb client
  ansible.builtin.package:
    name: mongodb-mongosh
    state: present

# load the products data to mongo db

- name: Check load products data or not
  ansible.builtin.command: mongosh --host mongodb.muruga.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
  register: catalogue_output

# printing above catalogue_output

- name: print catalogue output
  ansible.builtin.debug:
    msg: "{{ catalogue_output }}"

# load products in mongodb server if [stdout": "-1"] -> stdout less than 0, if greater than zero means products already loaded

- name: load products into mongodb server
  # the downside if use command module, it ll not work, because, special character like input, piping and variables ll not work in the command module, so we are using [shell module]
  ansible.builtin.shell: mongosh --host mongodb.muruga.site </app/db/master-data.js
  # here in below when contion, the catalogue output ll come as string, so just convert it to integer, serch in google like, convert a string to int in single line for ansible...
  when: catalogue_output.stdout | int < 0

  
- name: systemd setup from common tasks in roles folder # calling nodejs file in [common\tasks] to [catalogue\tasks]
  include_role:
    name: common
    tasks_from: systemd

#calling common code from [common\tasks] to [catalogue\tasks]
- name: deployment from common tasks in roles folder # calling app_setup file in [common\tasks] to [catalogue\tasks]
  tags:
  - deployment
  include_role:
    name: common
    tasks_from: deployment





